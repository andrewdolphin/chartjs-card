{"version":3,"file":"index.umd.js","sources":["../src/datetime/duration_to_seconds.ts","../src/datetime/format_date.ts","../src/datetime/format_date_time.ts","../src/datetime/format_time.ts","../src/datetime/relative_time.ts","../src/datetime/seconds_to_duration.ts","../src/compute-domain.ts","../src/compute-rtl.ts","../src/compute-state-domain.ts","../src/const.ts","../src/fire-event.ts","../src/create-thing.ts","../src/domain_icons.ts","../src/haptic.ts","../src/navigate.ts","../src/turn-on-off-entity.ts","../src/toggle-entity.ts","../src/sensor_icon.ts","../src/state_icon.ts","../src/binary_sensor_icon.ts","../src/cover_icon.ts","../src/input_datetime_icon.ts","../src/datetime/timer_time_remaining.ts","../src/apply_themes_on_element.ts","../src/compute-card-size.ts","../src/compute-entity.ts","../src/compute-state-display.ts","../src/evaluate-filter.ts","../src/handle-action.ts","../src/handle-click.ts","../src/has-action.ts","../src/has-changed.ts","../src/has-double-click.ts","../src/turn-on-off-entities.ts","../src/get-lovelace.ts"],"sourcesContent":["export function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleDateStringSupportsOptions() {\n  try {\n    new Date().toLocaleDateString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDate = (toLocaleDateStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleDateString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"mediumDate\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDateTime = (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleTimeStringSupportsOptions() {\n  try {\n    new Date().toLocaleTimeString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatTime = (toLocaleTimeStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleTimeString(locales, {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"shortTime\"));\n","import { LocalizeFunc } from \"../translations/localize\";\n\n/**\n * Calculate a string representing a date object as relative time from now.\n *\n * Example output: 5 minutes ago, in 3 days.\n */\nconst tests = [60, 60, 24, 7];\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\n\nexport function relativeTime(\n  dateObj: Date,\n  localize: LocalizeFunc,\n  options: {\n    compareTime?: Date;\n    includeTense?: boolean;\n  } = {}\n): string {\n  const compareTime = options.compareTime || new Date();\n  let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\n  const tense = delta >= 0 ? \"past\" : \"future\";\n  delta = Math.abs(delta);\n\n  let timeDesc;\n\n  for (let i = 0; i < tests.length; i++) {\n    if (delta < tests[i]) {\n      delta = Math.floor(delta);\n      timeDesc = localize(\n        `ui.components.relative_time.duration.${langKey[i]}`,\n        \"count\",\n        delta\n      );\n      break;\n    }\n\n    delta /= tests[i];\n  }\n\n  if (timeDesc === undefined) {\n    delta = Math.floor(delta);\n    timeDesc = localize(\n      \"ui.components.relative_time.duration.week\",\n      \"count\",\n      delta\n    );\n  }\n\n  return options.includeTense === false\n    ? timeDesc\n    : localize(`ui.components.relative_time.${tense}`, \"time\", timeDesc);\n}\n","const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","export function computeDomain(entityId: string): string {\n  return entityId.substr(0, entityId.indexOf(\".\"));\n}\n","import { HomeAssistant } from \"./types\";\n\nexport function computeRTL(hass: HomeAssistant) {\n  const lang = hass.language || \"en\";\n  if (hass.translationMetadata.translations[lang]) {\n    return hass.translationMetadata.translations[lang].isRTL || false;\n  }\n  return false;\n}\n\nexport function computeRTLDirection(hass: HomeAssistant) {\n  return computeRTL(hass) ? \"rtl\" : \"ltr\";\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport function computeStateDomain(stateObj: HassEntity) {\n  return computeDomain(stateObj.entity_id);\n}\n","/** Constants to be used in the frontend. */\n\n// Constants should be alphabetically sorted by name.\n// Arrays with values should be alphabetically sorted if order doesn't matter.\n// Each constant should have a description what it is supposed to be used for.\n\n/** Icon to use when no icon specified for domain. */\nexport const DEFAULT_DOMAIN_ICON = \"hass:bookmark\";\n\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\n\n/** Domains that have a state card. */\nexport const DOMAINS_WITH_CARD = [\n  \"climate\",\n  \"cover\",\n  \"configurator\",\n  \"input_select\",\n  \"input_number\",\n  \"input_text\",\n  \"lock\",\n  \"media_player\",\n  \"scene\",\n  \"script\",\n  \"timer\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weblink\"\n];\n\n/** Domains with separate more info dialog. */\nexport const DOMAINS_WITH_MORE_INFO = [\n  \"alarm_control_panel\",\n  \"automation\",\n  \"camera\",\n  \"climate\",\n  \"configurator\",\n  \"cover\",\n  \"fan\",\n  \"group\",\n  \"history_graph\",\n  \"input_datetime\",\n  \"light\",\n  \"lock\",\n  \"media_player\",\n  \"script\",\n  \"sun\",\n  \"updater\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weather\"\n];\n\n/** Domains that show no more info dialog. */\nexport const DOMAINS_HIDE_MORE_INFO = [\n  \"input_number\",\n  \"input_select\",\n  \"input_text\",\n  \"scene\",\n  \"weblink\"\n];\n\n/** Domains that should have the history hidden in the more info dialog. */\nexport const DOMAINS_MORE_INFO_NO_HISTORY = [\n  \"camera\",\n  \"configurator\",\n  \"history_graph\",\n  \"scene\"\n];\n\n/** States that we consider \"off\". */\nexport const STATES_OFF = [\"closed\", \"locked\", \"off\"];\n\n/** Domains where we allow toggle in Lovelace. */\nexport const DOMAINS_TOGGLE = new Set([\n  \"fan\",\n  \"input_boolean\",\n  \"light\",\n  \"switch\",\n  \"group\",\n  \"automation\"\n]);\n\n/** Temperature units. */\nexport const UNIT_C = \"°C\";\nexport const UNIT_F = \"°F\";\n\n/** Entity ID of the default view. */\nexport const DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\n","// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\ndeclare global {\n  // tslint:disable-next-line\n  interface HASSDomEvents {}\n}\n\nexport type ValidHassDomEvent = keyof HASSDomEvents;\n\nexport interface HASSDomEvent<T> extends Event {\n  detail: T;\n}\n\n/**\n * Dispatches a custom event with an optional detail value.\n *\n * @param {string} type Name of event type.\n * @param {*=} detail Detail value containing event-specific\n *   payload.\n * @param {{ bubbles: (boolean|undefined),\n *           cancelable: (boolean|undefined),\n *           composed: (boolean|undefined) }=}\n *  options Object specifying options.  These may include:\n *  `bubbles` (boolean, defaults to `true`),\n *  `cancelable` (boolean, defaults to false), and\n *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n * @return {Event} The new event that was fired.\n */\nexport const fireEvent = <HassEvent extends ValidHassDomEvent>(\n  node: HTMLElement | Window,\n  type: HassEvent,\n  detail?: HASSDomEvents[HassEvent],\n  options?: {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n  }\n) => {\n  options = options || {};\n  // @ts-ignore\n  detail = detail === null || detail === undefined ? {} : detail;\n  const event = new Event(type, {\n    bubbles: options.bubbles === undefined ? true : options.bubbles,\n    cancelable: Boolean(options.cancelable),\n    composed: options.composed === undefined ? true : options.composed\n  });\n  (event as any).detail = detail;\n  node.dispatchEvent(event);\n  return event;\n};\n","import { fireEvent } from \"./fire-event\";\n\nconst SPECIAL_TYPES = new Set([\n  \"call-service\",\n  \"divider\",\n  \"section\",\n  \"weblink\",\n  \"cast\",\n  \"select\"\n]);\nconst DOMAIN_TO_ELEMENT_TYPE = {\n  alert: \"toggle\",\n  automation: \"toggle\",\n  climate: \"climate\",\n  cover: \"cover\",\n  fan: \"toggle\",\n  group: \"group\",\n  input_boolean: \"toggle\",\n  input_number: \"input-number\",\n  input_select: \"input-select\",\n  input_text: \"input-text\",\n  light: \"toggle\",\n  lock: \"lock\",\n  media_player: \"media-player\",\n  remote: \"toggle\",\n  scene: \"scene\",\n  script: \"script\",\n  sensor: \"sensor\",\n  timer: \"timer\",\n  switch: \"toggle\",\n  vacuum: \"toggle\",\n  // Temporary. Once climate is rewritten,\n  // water heater should get it's own row.\n  water_heater: \"climate\",\n  input_datetime: \"input-datetime\"\n};\n\nexport const createThing = (cardConfig, isRow = false) => {\n  const _createError = (error, config) => {\n    return _createThing(\n      \"hui-error-card\",\n      {\n        type: \"error\",\n        error,\n        config\n      }\n    );\n  };\n\n  const _createThing = (tag, config) => {\n    const element = window.document.createElement(tag);\n    try {\n      element.setConfig(config);\n    } catch (err) {\n      console.error(tag, err);\n      return _createError(err.message, config);\n    }\n    return element;\n  };\n\n  if (!cardConfig || typeof cardConfig !== \"object\" || (!isRow && !cardConfig.type))\n    return _createError(\"No type defined\", cardConfig);\n  let tag = cardConfig.type;\n  if (tag && tag.startsWith(\"custom:\")) {\n    tag = tag.substr(\"custom:\".length);\n  } else if (isRow) {\n    if (SPECIAL_TYPES.has(tag)) {\n      tag = `hui-${tag}-row`;\n    } else {\n      if (!cardConfig.entity) {\n        return _createError(\"Invalid config given.\", cardConfig);\n      }\n    \n      const domain = cardConfig.entity.split(\".\", 1)[0];\n      tag = `hui-${DOMAIN_TO_ELEMENT_TYPE[domain] || \"text\"}-entity-row`;\n    }\n  } else {\n    tag = `hui-${tag}-card`;\n  }\n\n  if (customElements.get(tag)) return _createThing(tag, cardConfig);\n\n  // If element doesn't exist (yet) create an error\n  const element = _createError(\n    `Custom element doesn't exist: ${cardConfig.type}.`,\n    cardConfig\n  );\n  element.style.display = \"None\";\n  const timer = setTimeout(() => {\n    element.style.display = \"\";\n  }, 2000);\n  // Remove error if element is defined later\n  customElements.whenDefined(cardConfig.type).then(() => {\n    clearTimeout(timer);\n    fireEvent(element, \"ll-rebuild\", {}, element);\n  });\n\n  return element;\n};\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"./const\";\n\nexport const fixedIcons = {\n  alert: \"hass:alert\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weblink: \"hass:open-in-new\"\n};\n\nexport function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","import { HASSDomEvent, fireEvent } from \"./fire-event\";\n\n/**\n * Broadcast haptic feedback requests\n */\n\n\n// Allowed types are from iOS HIG.\n// https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/#haptics\n// Implementors on platforms other than iOS should attempt to match the patterns (shown in HIG) as closely as possible.\nexport type HapticType =\n  | \"success\"\n  | \"warning\"\n  | \"failure\"\n  | \"light\"\n  | \"medium\"\n  | \"heavy\"\n  | \"selection\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    haptic: HapticType;\n  }\n\n  interface GlobalEventHandlersEventMap {\n    haptic: HASSDomEvent<HapticType>;\n  }\n}\n\nexport const forwardHaptic = (hapticType: HapticType) => {\n  fireEvent(window, \"haptic\", hapticType);\n};\n","import { fireEvent } from \"./fire-event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (\n  _node: any,\n  path: string,\n  replace: boolean = false\n) => {\n  if (replace) {\n    history.replaceState(null, \"\", path);\n  } else {\n    history.pushState(null, \"\", path);\n  }\n  fireEvent(window, \"location-changed\", {\n    replace\n  });\n};\n","import { HomeAssistant } from \"./types\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntity = (\n  hass: HomeAssistant,\n  entityId: string,\n  turnOn = true\n): Promise<void> => {\n  const stateDomain = computeDomain(entityId);\n  const serviceDomain = stateDomain === \"group\" ? \"homeassistant\" : stateDomain;\n\n  let service;\n  switch (stateDomain) {\n    case \"lock\":\n      service = turnOn ? \"unlock\" : \"lock\";\n      break;\n    case \"cover\":\n      service = turnOn ? \"open_cover\" : \"close_cover\";\n      break;\n    default:\n      service = turnOn ? \"turn_on\" : \"turn_off\";\n  }\n\n  return hass.callService(serviceDomain, service, { entity_id: entityId });\n};\n","import { STATES_OFF } from \"./const\";\nimport { turnOnOffEntity } from \"./turn-on-off-entity\";\nimport { HomeAssistant } from \"./types\";\n\nexport const toggleEntity = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> => {\n  const turnOn = STATES_OFF.includes(hass.states[entityId].state);\n  return turnOnOffEntity(hass, entityId, turnOn);\n};\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"./const\";\nimport { domainIcon } from \"./domain_icons\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport const sensorIcon = (state: HassEntity) => {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute-domain\";\nimport { DEFAULT_DOMAIN_ICON } from \"./const\";\nimport { binarySensorIcon } from \"./binary_sensor_icon\";\nimport { coverIcon } from \"./cover_icon\";\nimport { sensorIcon } from \"./sensor_icon\";\nimport { inputDateTimeIcon } from \"./input_datetime_icon\";\nimport { domainIcon } from \"./domain_icons\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport const stateIcon = (state: HassEntity) => {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport const binarySensorIcon = (state: HassEntity) => {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n};\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { domainIcon } from \"./domain_icons\";\n\nexport const coverIcon = (state: HassEntity): string => {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"shutter\":\n      return open ? \"hass:window-shutter-open\" : \"hass:window-shutter\";\n    case \"blind\":\n      return open ? \"hass:blinds-open\" : \"hass:blinds\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n};\n","/** Return an icon representing an input datetime state. */\nimport { domainIcon } from \"./domain_icons\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const inputDateTimeIcon = (state: HassEntity): string => {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { durationToSeconds } from \"../datetime/duration_to_seconds\";\n\nexport function timerTimeRemaining(stateObj: HassEntity) {\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const madeActive = new Date(stateObj.last_changed).getTime();\n    timeRemaining = Math.max(timeRemaining - (now - madeActive) / 1000, 0);\n  }\n\n  return timeRemaining;\n}\n","/**\n * Apply a theme to an element by setting the CSS variables on it.\n *\n * element: Element to apply theme on.\n * themes: HASS Theme information\n * localTheme: selected theme.\n * updateMeta: boolean if we should update the theme-color meta element.\n */\nexport const applyThemesOnElement = (\n  element,\n  themes,\n  localTheme,\n  updateMeta = false\n) => {\n  if (!element._themes) {\n    element._themes = {};\n  }\n  let themeName = themes.default_theme;\n  if (localTheme === \"default\" || (localTheme && themes.themes[localTheme])) {\n    themeName = localTheme;\n  }\n  const styles = { ...element._themes };\n  if (themeName !== \"default\") {\n    const theme = themes.themes[themeName];\n    Object.keys(theme).forEach((key) => {\n      const prefixedKey = \"--\" + key;\n      element._themes[prefixedKey] = \"\";\n      styles[prefixedKey] = theme[key];\n    });\n  }\n  if (element.updateStyles) {\n    element.updateStyles(styles);\n  } else if ((window as any).ShadyCSS) {\n    // implement updateStyles() method of Polemer elements\n    (window as any).ShadyCSS.styleSubtree(/** @type {!HTMLElement} */ (element), styles);\n  }\n\n  if (!updateMeta) {\n    return;\n  }\n\n  const meta = document.querySelector(\"meta[name=theme-color]\");\n  if (meta) {\n    if (!meta.hasAttribute(\"default-content\")) {\n      meta.setAttribute(\"default-content\", meta.getAttribute(\"content\")!);\n    }\n    const themeColor =\n      styles[\"--primary-color\"] || meta.getAttribute(\"default-content\");\n    meta.setAttribute(\"content\", themeColor);\n  }\n}\n","import { LovelaceCard } from \"./types\";\n\nexport const computeCardSize = (card: LovelaceCard): number => {\n  return typeof card.getCardSize === \"function\" ? card.getCardSize() : 1;\n};\n","export function computeEntity(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { formatDateTime } from \"./datetime/format_date_time\";\nimport { formatDate } from \"./datetime/format_date\";\nimport { formatTime } from \"./datetime/format_time\";\nimport { LocalizeFunc } from \"./translations/localize\";\nimport { computeStateDomain } from \"./compute-state-domain\";\n\nexport function computeStateDisplay(\n  localize: LocalizeFunc,\n  stateObj: HassEntity,\n  language: string\n): string {\n  if (stateObj.state === \"unknown\" || stateObj.state === \"unavailable\") {\n    return localize(`state.default.${stateObj.state}`);\n  }\n\n  if (stateObj.attributes.unit_of_measurement) {\n    return `${stateObj.state} ${stateObj.attributes.unit_of_measurement}`;\n  }\n\n  const domain = computeStateDomain(stateObj);\n\n  if (domain === \"input_datetime\") {\n    let date: Date;\n    if (!stateObj.attributes.has_time) {\n      date = new Date(\n        stateObj.attributes.year,\n        stateObj.attributes.month - 1,\n        stateObj.attributes.day\n      );\n      return formatDate(date, language);\n    }\n    if (!stateObj.attributes.has_date) {\n      const now = new Date();\n      date = new Date(\n        // Due to bugs.chromium.org/p/chromium/issues/detail?id=797548\n        // don't use artificial 1970 year.\n        now.getFullYear(),\n        now.getMonth(),\n        now.getDay(),\n        stateObj.attributes.hour,\n        stateObj.attributes.minute\n      );\n      return formatTime(date, language);\n    }\n\n    date = new Date(\n      stateObj.attributes.year,\n      stateObj.attributes.month - 1,\n      stateObj.attributes.day,\n      stateObj.attributes.hour,\n      stateObj.attributes.minute\n    );\n    return formatDateTime(date, language);\n  }\n\n  return (\n    // Return device class translation\n    (stateObj.attributes.device_class &&\n      localize(\n        `component.${domain}.state.${stateObj.attributes.device_class}.${stateObj.state}`\n      )) ||\n    // Return default translation\n    localize(`component.${domain}.state._.${stateObj.state}`) ||\n    // We don't know! Return the raw state.\n    stateObj.state\n  );\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const evaluateFilter = (stateObj: HassEntity, filter: any): boolean => {\n  const operator = filter.operator || \"==\";\n  const value = filter.value || filter;\n  const state = filter.attribute\n    ? stateObj.attributes[filter.attribute]\n    : stateObj.state;\n\n  switch (operator) {\n    case \"==\":\n      return state === value;\n    case \"<=\":\n      return state <= value;\n    case \"<\":\n      return state < value;\n    case \">=\":\n      return state >= value;\n    case \">\":\n      return state > value;\n    case \"!=\":\n      return state !== value;\n    case \"regex\": {\n      return state.match(value);\n    }\n    default:\n      return false;\n  }\n};\n","import { HomeAssistant, ActionConfig } from \"./types\";\nimport { forwardHaptic } from \"./haptic\";\nimport { fireEvent } from \"./fire-event\";\nimport { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\n\n\nexport const handleAction = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    double_tap_action?: ActionConfig;\n  },\n  action: string\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (action === \"double_tap\" && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (action === \"hold\" && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (action === \"tap\" && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\",\n    };\n  }\n\n  if (\n    actionConfig.confirmation &&\n    (!actionConfig.confirmation.exemptions ||\n      !actionConfig.confirmation.exemptions.some(\n        (e) => e.user === hass!.user!.id\n      ))\n  ) {\n    forwardHaptic(\"warning\");\n\n    if (\n      !confirm(\n        actionConfig.confirmation.text ||\n          `Are you sure you want to ${actionConfig.action}?`\n      )\n    ) {\n      return;\n    }\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (config.entity || config.camera_image) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: config.entity ? config.entity : config.camera_image!,\n        });\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n      }\n      break;\n    case \"url\":\n      if (actionConfig.url_path) {\n        window.open(actionConfig.url_path);\n      }\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        forwardHaptic(\"success\");\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        forwardHaptic(\"failure\");\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      hass.callService(domain, service, actionConfig.service_data);\n      forwardHaptic(\"success\");\n    }\n  }\n};","import { HomeAssistant, ActionConfig } from \"./types\";\nimport { fireEvent } from \"./fire-event\";\nimport { forwardHaptic } from \"./haptic\";\nimport { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\n\nexport const handleClick = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    double_tap_action?: ActionConfig;\n  },\n  hold: boolean,\n  dblClick: boolean\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (dblClick && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (hold && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (!hold && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\"\n    };\n  }\n\n  if (\n    actionConfig.confirmation &&\n    (!actionConfig.confirmation.exemptions ||\n      !actionConfig.confirmation.exemptions.some(\n        e => e.user === hass!.user!.id\n      ))\n  ) {\n    if (\n      !confirm(\n        actionConfig.confirmation.text ||\n          `Are you sure you want to ${actionConfig.action}?`\n      )\n    ) {\n      return;\n    }\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (actionConfig.entity || config.entity || config.camera_image) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: actionConfig.entity\n            ? actionConfig.entity\n            : config.entity\n            ? config.entity\n            : config.camera_image\n        });\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"url\":\n      actionConfig.url_path && window.open(actionConfig.url_path);\n      if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      const serviceData = { ...actionConfig.service_data };\n      if (serviceData.entity_id === \"entity\") {\n        serviceData.entity_id = config.entity;\n      }\n      hass.callService(domain, service, serviceData);\n      if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n    }\n  }\n};\n","import { ActionConfig } from \"./types\";\n\nexport function hasAction(config?: ActionConfig): boolean {\n  return config !== undefined && config.action !== \"none\";\n}\n","import { PropertyValues } from \"lit-element\";\n\nimport { HomeAssistant } from \"./types\";\n\n// Check if config or Entity changed\nexport function hasConfigOrEntityChanged(\n  element: any,\n  changedProps: PropertyValues,\n  forceUpdate: Boolean,\n): boolean {\n  if (changedProps.has('config') || forceUpdate) {\n    return true;\n  }\n\n  if (element.config!.entity) {\n    const oldHass = changedProps.get('hass') as HomeAssistant | undefined;\n    if (oldHass) {\n      return (\n        oldHass.states[element.config!.entity]\n        !== element.hass!.states[element.config!.entity]\n      );\n    }\n    return true;\n  } else {\n    return false;\n  }\n}","import { ActionConfig } from \"./types\";\n\n// Check if config or Entity changed\nexport function hasDoubleClick(config?: ActionConfig): boolean {\n  return config !== undefined && config.action !== \"none\";\n}","import { HomeAssistant } from \"./types\";\nimport { STATES_OFF } from \"./const\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntities = (\n  hass: HomeAssistant,\n  entityIds: string[],\n  turnOn = true\n): void => {\n  const domainsToCall = {};\n  entityIds.forEach((entityId) => {\n    if (STATES_OFF.includes(hass.states[entityId].state) === turnOn) {\n      const stateDomain = computeDomain(entityId);\n      const serviceDomain = [\"cover\", \"lock\"].includes(stateDomain)\n        ? stateDomain\n        : \"homeassistant\";\n\n      if (!(serviceDomain in domainsToCall)) {\n        domainsToCall[serviceDomain] = [];\n      }\n      domainsToCall[serviceDomain].push(entityId);\n    }\n  });\n\n  Object.keys(domainsToCall).forEach((domain) => {\n    let service;\n    switch (domain) {\n      case \"lock\":\n        service = turnOn ? \"unlock\" : \"lock\";\n        break;\n      case \"cover\":\n        service = turnOn ? \"open_cover\" : \"close_cover\";\n        break;\n      default:\n        service = turnOn ? \"turn_on\" : \"turn_off\";\n    }\n\n    const entities = domainsToCall[domain];\n    hass.callService(domain, service, { entity_id: entities });\n  });\n};\n","export const getLovelace = () => {\n    let root: any = document.querySelector('home-assistant');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('home-assistant-main');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('app-drawer-layout partial-panel-resolver');\n    root = root && root.shadowRoot || root;\n    root = root && root.querySelector('ha-panel-lovelace');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('hui-root');\n    if (root) {\n        const ll = root.lovelace;\n        ll.current_view = root.___curView;\n        return ll;\n    }\n    return null;\n}\n"],"names":["durationToSeconds","duration","parts","split","map","Number","formatDate","Date","toLocaleDateString","e","name","toLocaleDateStringSupportsOptions","dateObj","locales","year","month","day","fecha","format","formatDateTime","toLocaleString","toLocaleStringSupportsOptions","hour","minute","formatTime","toLocaleTimeString","toLocaleTimeStringSupportsOptions","tests","langKey","leftPad","num","computeDomain","entityId","substr","indexOf","computeRTL","hass","lang","language","translationMetadata","translations","isRTL","computeStateDomain","stateObj","entity_id","DEFAULT_DOMAIN_ICON","STATES_OFF","DOMAINS_TOGGLE","Set","fireEvent","node","type","detail","options","event","Event","bubbles","undefined","cancelable","Boolean","composed","dispatchEvent","SPECIAL_TYPES","DOMAIN_TO_ELEMENT_TYPE","alert","automation","climate","cover","fan","group","input_boolean","input_number","input_select","input_text","light","lock","media_player","remote","scene","script","sensor","timer","switch","vacuum","water_heater","input_datetime","fixedIcons","calendar","camera","configurator","conversation","device_tracker","history_graph","homeassistant","homekit","image_processing","mailbox","notify","person","plant","proximity","simple_alarm","sun","updater","weblink","domainIcon","domain","state","console","warn","forwardHaptic","hapticType","window","navigate","_node","path","replace","history","replaceState","pushState","turnOnOffEntity","turnOn","service","stateDomain","serviceDomain","callService","toggleEntity","includes","states","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","domainIcons","binary_sensor","activated","attributes","device_class","open","dclass","battery","isNaN","batteryRound","Math","round","unit","unit_of_measurement","has_date","has_time","localize","timeDesc","delta","compareTime","getTime","tense","abs","let","i","length","floor","includeTense","d","h","m","s","timeRemaining","remaining","now","madeActive","last_changed","max","element","themes","localTheme","updateMeta","_themes","themeName","default_theme","styles","Object","theme","keys","forEach","key","prefixedKey","updateStyles","ShadyCSS","styleSubtree","meta","document","querySelector","hasAttribute","setAttribute","getAttribute","themeColor","card","getCardSize","date","getFullYear","getMonth","getDay","cardConfig","isRow","_createError","error","config","_createThing","tag","createElement","setConfig","err","message","startsWith","has","entity","customElements","get","style","display","setTimeout","whenDefined","then","clearTimeout","filter","value","attribute","operator","match","action","actionConfig","double_tap_action","hold_action","tap_action","confirmation","exemptions","some","user","id","confirm","text","camera_image","navigation_path","url_path","service_data","hold","dblClick","haptic","serviceData","changedProps","forceUpdate","oldHass","entityIds","domainsToCall","push","root","shadowRoot","ll","lovelace","current_view","___curView","icon"],"mappings":"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"}